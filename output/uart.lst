C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE ECBM_LIB\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\ECBM_LIB;.\d
                    -evice;.\device\new_test;.\device\proj) DEBUG OBJECTEXTEND PRINT(.\output\uart.lst) OBJECT(.\output\uart.obj)

line level    source

   1          #include "ecbm_core.h"//Í³Ò»¼ÓÔØºËÐÄÍ·ÎÄ¼þ
   2          #if ECBM_UART_LIB_EN  //¼ì²é±¾¿âÓÐÃ»ÓÐ±»Ê¹ÄÜ
   3          /*--------------------------------------±äÁ¿¶¨Òå-----------------------------------*/
   4          #if ECBM_UART1_EN
   5          bit uart1_busy;
   6              #if (ECBM_MCU == 0x310201)||(ECBM_MCU == 0x3102A1)
                      u8 code uart1_io_map[3][2]={
                          {D30,D31},
                          {D32,D33},
                          {D54,D55},
                      };
                  #else
  13                  u8 code uart1_io_map[4][2]={
  14                      {D30,D31},
  15                      {D36,D37},
  16                      {D16,D17},
  17                      {D43,D44},
  18                  };
  19              #endif
  20          #endif
  21          #if ECBM_UART2_EN
  22          bit uart2_busy;
  23              #if    ((ECBM_MCU&0xF00000)<=0x200000)
  24                  u8 code uart2_io_map[2][2]={
  25                      {D10,D11},
  26                      {D40,D42},
  27                  };
  28              #else
                      u8 code uart2_io_map[2][2]={
                          {D10,D11},
                          {D46,D47},
                      };        
                  #endif
  34          #endif
  35          #if ECBM_UART3_EN
              bit uart3_busy;
              u8 code uart3_io_map[2][2]={
              {D00,D01},
              {D50,D51},
              };
              #endif
  42          #if ECBM_UART4_EN
              bit uart4_busy;
              u8 code uart4_io_map[2][2]={
              {D02,D03},
              {D52,D53},
              };
              #endif
  49          /*------------------------------------×ÊÔ´³åÍ»¾¯¸æ---------------------------------*/
  50          //------------------------------------Ð£Ñé²¿·Ö¾¯¸æ---------------------------------//
  51          #if ECBM_UART1_EN    ==    1
  52          #if            (ECBM_UART1_PARITY!=0)                    //Èô´ò¿ªÁËÐ£Ñé£¬
                  #if        ((ECBM_UART1_SCON_CONFIG&0x80)!=0x80)    //µ«ÊÇÃ»ÓÐÉèÖÃ³É9Î»Êý¾Ý¡£
                  #error    ÈôÏë¿ªÆô´®¿Ú1µÄÐ£Ñé¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 2   

                  #endif
              #else                                                //ÈôÃ»ÓÐ´ò¿ªÐ£Ñé»òÕß¶à»úÍ¨ÐÅ£¬
  57              #if        ((ECBM_UART1_SCON_CONFIG&0x80)==0x80)&&((ECBM_UART1_SCON_CONFIG&0x20)==0)    //È´ÉèÖÃ³ÉÁË9Î
             -»Êý¾Ý¡£
                  #warning    ´®¿Ú1µ±Ç°Ã»ÓÐ¿ªÆôÐ£Ñé»òÕß¶à»úÍ¨ÐÅ¹¦ÄÜ£¬ÇëÁôÒâÒ»ÏÂ¹¤×÷Ä£Ê½ÊÇ·ñÒ»¶¨ÉèÖÃÎª9Î»¡£
                  #endif
  60          #endif
  61          #endif
  62          
  63          #if ECBM_UART2_EN    ==    1
  64          #if            (ECBM_UART2_PARITY!=0)                    //Èô´ò¿ªÁËÐ£Ñé£¬
                  #if        ((ECBM_UART2_S2CON_CONFIG&0x80)!=0x80)    //µ«ÊÇÃ»ÓÐÉèÖÃ³É9Î»Êý¾Ý¡£
                  #error    ÈôÏë¿ªÆô´®¿Ú2µÄÐ£Ñé¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
                  #endif
              #else                                                //ÈôÃ»ÓÐ´ò¿ªÐ£Ñé»òÕß¶à»úÍ¨ÐÅ£¬
  69              #if        ((ECBM_UART2_S2CON_CONFIG&0x80)==0x80)&&((ECBM_UART2_S2CON_CONFIG&0x20)==0)    //È´ÉèÖÃ³ÉÁË
             -9Î»Êý¾Ý¡£
                  #warning    ´®¿Ú2µ±Ç°Ã»ÓÐ¿ªÆôÐ£Ñé»òÕß¶à»úÍ¨ÐÅ¹¦ÄÜ£¬ÇëÁôÒâÒ»ÏÂ¹¤×÷Ä£Ê½ÊÇ·ñÒ»¶¨ÉèÖÃÎª9Î»¡£
                  #endif
  72          #endif
  73          #endif
  74          
  75          #if ECBM_UART3_EN    ==    1
              #if            (ECBM_UART3_PARITY!=0)                    //Èô´ò¿ªÁËÐ£Ñé£¬
                  #if        ((ECBM_UART3_S3CON_CONFIG&0x80)!=0x80)    //µ«ÊÇÃ»ÓÐÉèÖÃ³É9Î»Êý¾Ý¡£
                  #error    ÈôÏë¿ªÆô´®¿Ú3µÄÐ£Ñé¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
                  #endif
              #else                                                //ÈôÃ»ÓÐ´ò¿ªÐ£Ñé»òÕß¶à»úÍ¨ÐÅ£¬
                  #if        ((ECBM_UART3_S3CON_CONFIG&0x80)==0x80)&&((ECBM_UART3_S3CON_CONFIG&0x20)==0)    //È´ÉèÖÃ³ÉÁË
             -9Î»Êý¾Ý¡£
                  #warning    ´®¿Ú3µ±Ç°Ã»ÓÐ¿ªÆôÐ£Ñé»òÕß¶à»úÍ¨ÐÅ¹¦ÄÜ£¬ÇëÁôÒâÒ»ÏÂ¹¤×÷Ä£Ê½ÊÇ·ñÒ»¶¨ÉèÖÃÎª9Î»¡£
                  #endif
              #endif
              #endif
  86          
  87          #if ECBM_UART4_EN    ==    1
              #if            (ECBM_UART4_PARITY!=0)                    //Èô´ò¿ªÁËÐ£Ñé£¬
                  #if        ((ECBM_UART4_S4CON_CONFIG&0x80)!=0x80)    //µ«ÊÇÃ»ÓÐÉèÖÃ³É9Î»Êý¾Ý¡£
                  #error    ÈôÏë¿ªÆô´®¿Ú4µÄÐ£Ñé¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
                  #endif
              #else                                                //ÈôÃ»ÓÐ´ò¿ªÐ£Ñé»òÕß¶à»úÍ¨ÐÅ£¬
                  #if        ((ECBM_UART4_S4CON_CONFIG&0x80)==0x80)&&((ECBM_UART4_S4CON_CONFIG&0x20)==0)    //È´ÉèÖÃ³ÉÁË
             -9Î»Êý¾Ý¡£
                  #warning    ´®¿Ú4µ±Ç°Ã»ÓÐ¿ªÆôÐ£Ñé»òÕß¶à»úÍ¨ÐÅ¹¦ÄÜ£¬ÇëÁôÒâÒ»ÏÂ¹¤×÷Ä£Ê½ÊÇ·ñÒ»¶¨ÉèÖÃÎª9Î»¡£
                  #endif
              #endif
              #endif
  98          //----------------------------------¶à»úÍ¨ÐÅ²¿·Ö¾¯¸æ-------------------------------//
  99          #if    (ECBM_UART1_SCON_CONFIG&0x20)&&((ECBM_UART1_SCON_CONFIG&0x80)==0)
              #error Èô¿ªÆô´®¿Ú1µÄ¶à»úÍ¨ÐÅ¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
              #endif
 102          #if    (ECBM_UART2_S2CON_CONFIG&0x20)&&((ECBM_UART2_S2CON_CONFIG&0x80)==0)
              #error Èô¿ªÆô´®¿Ú2µÄ¶à»úÍ¨ÐÅ¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
              #endif
 105          #if    (ECBM_UART3_S3CON_CONFIG&0x20)&&((ECBM_UART3_S3CON_CONFIG&0x80)==0)
              #error Èô¿ªÆô´®¿Ú3µÄ¶à»úÍ¨ÐÅ¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
              #endif
 108          #if    (ECBM_UART4_S4CON_CONFIG&0x20)&&((ECBM_UART4_S4CON_CONFIG&0x80)==0)
              #error Èô¿ªÆô´®¿Ú4µÄ¶à»úÍ¨ÐÅ¹¦ÄÜ£¬Çë°Ñ¹¤×÷Ä£Ê½ÉèÖÃÎª9Î»£¡
              #endif
 111          //------------------------------------´®¿ÚÊýÁ¿¾¯¸æ---------------------------------//
 112          #if    (ECBM_UART2_EN == 1)&&((ECBM_MCU&0x00000F)<0x000002)
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 3   

              #error µ±Ç°µ¥Æ¬»úÐÍºÅ²»Ö§³Ö´®¿Ú2£¬Çë¸ü»»ÐÍºÅ»òÕß¹Ø±Õ´®¿Ú2¡£
              #endif
 115          #if    (ECBM_UART3_EN == 1)&&((ECBM_MCU&0x00000F)<0x000003)
              #error µ±Ç°µ¥Æ¬»úÐÍºÅ²»Ö§³Ö´®¿Ú3£¬Çë¸ü»»ÐÍºÅ»òÕß¹Ø±Õ´®¿Ú3¡£
              #endif
 118          #if    (ECBM_UART4_EN == 1)&&((ECBM_MCU&0x00000F)<0x000004)
              #error µ±Ç°µ¥Æ¬»úÐÍºÅ²»Ö§³Ö´®¿Ú4£¬Çë¸ü»»ÐÍºÅ»òÕß¹Ø±Õ´®¿Ú4¡£
              #endif
 121          //----------------------------------ºÍ¶¨Ê±Æ÷³åÍ»¾¯¸æ-------------------------------//
 122          #if    (ECBM_UART1_EN == 1)&&((ECBM_UART1_AUXR_CONFIG&0x01) == 0x01)&&(ECBM_UART2_EN == 1)
              #if    ECBM_UART1_BAUD_RATE != ECBM_UART2_BAUD_RATE
              #error ´®¿Ú1ºÍ´®¿Ú2µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú1µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú1ºÍ´®¿Ú2µÄ²¨ÌØÂÊµ÷³ÉÒ
             -»ÖÂ¡£
              #endif
              #endif
 127          #if    (ECBM_UART1_EN == 1)&&((ECBM_UART1_AUXR_CONFIG&0x01) == 0x01)&&(ECBM_UART3_EN == 1)&&((ECBM_UART3_S
             -3CON_CONFIG&0x40)==0x00)
              #if    ECBM_UART1_BAUD_RATE != ECBM_UART3_BAUD_RATE
              #error ´®¿Ú1ºÍ´®¿Ú3µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú1»ò´®¿Ú3µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú1ºÍ´®¿Ú3µÄ²¨ÌØ
             -ÂÊµ÷³ÉÒ»ÖÂ¡£
              #endif
              #endif
 132          #if    (ECBM_UART1_EN == 1)&&((ECBM_UART1_AUXR_CONFIG&0x01) == 0x01)&&(ECBM_UART4_EN == 1)&&((ECBM_UART4_S
             -4CON_CONFIG&0x40)==0x00)
              #if    ECBM_UART1_BAUD_RATE != ECBM_UART4_BAUD_RATE
              #error ´®¿Ú1ºÍ´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú1»ò´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú1ºÍ´®¿Ú4µÄ²¨ÌØ
             -ÂÊµ÷³ÉÒ»ÖÂ¡£
              #endif
              #endif
 137          #if    (ECBM_UART2_EN == 1)&&(ECBM_UART3_EN == 1)&&((ECBM_UART3_S3CON_CONFIG&0x40)==0x00)
              #if    ECBM_UART2_BAUD_RATE != ECBM_UART3_BAUD_RATE
              #error ´®¿Ú2ºÍ´®¿Ú3µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú3µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú2ºÍ´®¿Ú3µÄ²¨ÌØÂÊµ÷³ÉÒ
             -»ÖÂ¡£
              #endif
              #endif
 142          #if    (ECBM_UART2_EN == 1)&&(ECBM_UART4_EN == 1)&&((ECBM_UART4_S4CON_CONFIG&0x40)==0x00)
              #if    ECBM_UART2_BAUD_RATE != ECBM_UART4_BAUD_RATE
              #error ´®¿Ú2ºÍ´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú2ºÍ´®¿Ú4µÄ²¨ÌØÂÊµ÷³ÉÒ
             -»ÖÂ¡£
              #endif
              #endif
 147          #if    (ECBM_UART3_EN == 1)&&((ECBM_UART3_S3CON_CONFIG&0x40)==0x00)&&(ECBM_UART4_EN == 1)&&((ECBM_UART4_S4
             -CON_CONFIG&0x40)==0x00)
              #if    ECBM_UART3_BAUD_RATE != ECBM_UART4_BAUD_RATE
              #error ´®¿Ú3ºÍ´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷£¨¶¨Ê±Æ÷2£©³åÍ»¡£Çë¸ü»»´®¿Ú3»ò´®¿Ú4µÄ²¨ÌØÂÊ²úÉúÆ÷»òÕß½«´®¿Ú3ºÍ´®¿Ú4µÄ²¨ÌØ
             -ÂÊµ÷³ÉÒ»ÖÂ¡£
              #endif
              #endif
 152          /*--------------------------------------³ÌÐò¶¨Òå-----------------------------------*/
 153          /*-------------------------------------------------------
 154          ´®¿Ú³õÊ¼»¯º¯Êý¡£
 155          -------------------------------------------------------*/
 156          void uart_init(void){
 157   1      #if ECBM_UART1_EN == 1    //µ±´®¿Ú1¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
 158   1          UART1_SET_REG_SCON    (ECBM_UART1_SCON_CONFIG);    //Ð´ÈëSCONÅäÖÃ£¬°üº¬¹¤×÷Ä£Ê½¡¢½ÓÊÕÊ¹ÄÜ¡¢¶à»úÍ¨ÐÅµÄÑ
             -¡Ïî¡£
 159   1          UART1_SET_REG_PCON    (ECBM_UART1_PCON_CONFIG);    //Ð´ÈëPCONÅäÖÃ£¬°üº¬²¨ÌØÂÊ¼Ó±¶¡£
 160   1          UART1_SET_REG_AUXR    (ECBM_UART1_AUXR_CONFIG);    //Ð´ÈëAUXRÅäÖÃ£¬°üº¬¼Ó±¶¿ØÖÆ¡¢²¨ÌØÂÊ·¢ÉúÆ÷Ñ¡Ôñ¡£
 161   1          uart_set_io            (1,ECBM_UART1_IO);            //Ð´ÈëIOÑ¡Ôñ¿ØÖÆÎ»¡£
 162   1          uart_set_baud        (1,ECBM_UART1_BAUD_RATE);    //ÉèÖÃ²¨ÌØÂÊ¡£
 163   1          #if (ECBM_UART1_SCON_CONFIG&0x20)                //Èç¹û´ò¿ªÁË¶à»úÍ¨ÐÅ¹¦ÄÜ£¬
                  UART1_SET_REG_SADDR    (ECBM_UART1_SADDR_CONFIG);    //Ð´Èë´Ó»úµØÖ·¡£
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 4   

                  UART1_SET_REG_SADEN    (ECBM_UART1_SADEN_CONFIG);    //Ð´Èë´Ó»úµØÖ·Ê¹ÄÜÎ»¡£
                  #endif
 167   1          #if (ECBM_UART1_AUXR_CONFIG&0x01) == 0            //Èç¹ûÑ¡ÔñÁË¶¨Ê±Æ÷1£¬
 168   1          TIMER1_SET_MODE_1T;        //Éè¶¨¶¨Ê±Æ÷1Îª1TÄ£Ê½£¬
 169   1          TIMER1_SET_REG_TMOD(0);    //Éè¶¨¶¨Ê±Æ÷1Îª16Î»×Ô¶¯ÖØ×°·½Ê½£¬Ä¿Ç°ÕâÑùÉèÖÃÒÑ¾­ÄÜÂú×ã³£ÓÃµÄ²¨ÌØÂÊÁË¡£
 170   1          TIMER1_IT_DISABLE;        //½ûÖ¹¶¨Ê±Æ÷1ÖÐ¶Ï¡£
 171   1          TIMER1_POWER_ON;        //Æô¶¯¶¨Ê±Æ÷1¡£
 172   1          #else                    //Èç¹ûÑ¡ÔñÁË¶¨Ê±Æ÷2£¬
                  TIMER2_SET_MODE_1T;        //Éè¶¨¶¨Ê±Æ÷2Îª1TÄ£Ê½¡£
                  TIMER2_IT_DISABLE;        //½ûÖ¹¶¨Ê±Æ÷2ÖÐ¶Ï¡£
                  TIMER2_POWER_ON;        //Æô¶¯¶¨Ê±Æ÷2¡£
                  #endif
 177   1          uart1_busy=0;            //´®¿Ú1Ã¦±êÖ¾Î»Çå0¡£
 178   1          UART1_IT_ENABLE;        //´ò¿ª´®¿Ú1ÖÐ¶Ï¡£
 179   1      #endif
 180   1      
 181   1      #if ECBM_UART2_EN == 1   //µ±´®¿Ú2¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
 182   1          UART2_SET_REG_S2CON    (ECBM_UART2_S2CON_CONFIG);    //Ð´ÈëS2CONÅäÖÃ,°üº¬ÁËÍ¨ÐÅÎ»Êý¡¢½ÓÊÕÔÊÐí¡¢¶à»úÍ¨Ð
             -Å¡£
 183   1          uart_set_io            (2,ECBM_UART2_IO);            //Ð´ÈëIOÑ¡Ôñ¿ØÖÆÎ»¡£
 184   1          uart_set_baud        (2,ECBM_UART2_BAUD_RATE);    //ÉèÖÃ²¨ÌØÂÊ¡£
 185   1          TIMER2_SET_MODE_1T;    //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T¡£
 186   1          TIMER2_IT_DISABLE;  //½ûÖ¹¶¨Ê±Æ÷2ÖÐ¶Ï¡£
 187   1          TIMER2_POWER_ON;    //Æô¶¯¶¨Ê±Æ÷2¡£
 188   1          uart2_busy=0;       //´®¿Ú2Ã¦±êÖ¾Î»Çå0¡£
 189   1          UART2_IT_ENABLE;    //´ò¿ª´®¿Ú2ÖÐ¶Ï¡£
 190   1      #endif
 191   1          
 192   1      #if ECBM_UART3_EN == 1   //µ±´®¿Ú3¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
                  UART3_SET_REG_S3CON    (ECBM_UART3_S3CON_CONFIG);    //Ð´ÈëS3CONÅäÖÃ,°üº¬ÁËÍ¨ÐÅÎ»Êý¡¢½ÓÊÕÔÊÐí¡¢¶à»úÍ¨Ð
             -Å¡¢²¨ÌØÂÊ²úÉúÆ÷Ñ¡Ôñ¡£
                  uart_set_io            (3,ECBM_UART3_IO);            //Ð´ÈëIOÑ¡Ôñ¿ØÖÆÎ»¡£
                  uart_set_baud        (3,ECBM_UART3_BAUD_RATE);    //ÉèÖÃ²¨ÌØÂÊ¡£
                  #if (ECBM_UART3_S3CON_CONFIG&0x40)==0
                  TIMER2_SET_MODE_1T;    //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T¡£
                  TIMER2_IT_DISABLE;  //½ûÖ¹¶¨Ê±Æ÷2ÖÐ¶Ï¡£
                  TIMER2_POWER_ON;    //Æô¶¯¶¨Ê±Æ÷2¡£
                  #else
                  TIMER3_SET_MODE_1T;    //¶¨Ê±Æ÷3Ê±ÖÓÎªFosc,¼´1T¡£
                  TIMER3_IT_DISABLE;  //½ûÖ¹¶¨Ê±Æ÷3ÖÐ¶Ï¡£
                  TIMER3_POWER_ON;    //Æô¶¯¶¨Ê±Æ÷3¡£
                  #endif
                  uart3_busy=0;       //´®¿Ú3Ã¦±êÖ¾Î»Çå0¡£
                  UART3_IT_ENABLE;    //´ò¿ª´®¿Ú3ÖÐ¶Ï¡£
              #endif
 208   1          
 209   1      #if ECBM_UART4_EN == 1   //µ±´®¿Ú4¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
                  UART4_SET_REG_S4CON    (ECBM_UART4_S4CON_CONFIG);    //Ð´ÈëS4CONÅäÖÃ,°üº¬ÁËÍ¨ÐÅÎ»Êý¡¢½ÓÊÕÔÊÐí¡¢¶à»úÍ¨Ð
             -Å¡¢²¨ÌØÂÊ²úÉúÆ÷Ñ¡Ôñ¡£
                  uart_set_io            (4,ECBM_UART4_IO);            //Ð´ÈëIOÑ¡Ôñ¿ØÖÆÎ»¡£
                  uart_set_baud        (4,ECBM_UART4_BAUD_RATE);    //ÉèÖÃ²¨ÌØÂÊ¡£
                  #if (ECBM_UART4_S4CON_CONFIG&0x40)==0
                  TIMER2_SET_MODE_1T;    //¶¨Ê±Æ÷2Ê±ÖÓÎªFosc,¼´1T¡£
                  TIMER2_IT_DISABLE;  //½ûÖ¹¶¨Ê±Æ÷2ÖÐ¶Ï¡£
                  TIMER2_POWER_ON;    //Æô¶¯¶¨Ê±Æ÷2¡£
                  #else
                  TIMER4_SET_MODE_1T;    //¶¨Ê±Æ÷4Ê±ÖÓÎªFosc,¼´1T¡£
                  TIMER4_IT_DISABLE;  //½ûÖ¹¶¨Ê±Æ÷4ÖÐ¶Ï¡£
                  TIMER4_POWER_ON;    //Æô¶¯¶¨Ê±Æ÷4¡£
                  #endif
                  uart4_busy=0;       //´®¿Ú4Ã¦±êÖ¾Î»Çå0¡£
                  UART4_IT_ENABLE;    //´ò¿ª´®¿Ú4ÖÐ¶Ï¡£
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 5   

              #endif
 225   1      }
 226          /*-------------------------------------------------------
 227          ´®¿ÚÊä³öIOÉèÖÃº¯Êý¡£
 228          -------------------------------------------------------*/
 229          void uart_set_io(u8 id,u8 io){
 230   1          switch(id){
 231   2              #if ECBM_UART1_EN
 232   2              case 1:{
 233   3                  UART1_SET_PIN(io);
 234   3                  gpio_mode(uart1_io_map[io>>6][0],GPIO_IN);
 235   3                  gpio_mode(uart1_io_map[io>>6][1],GPIO_OUT);
 236   3              }break;
 237   2              #endif
 238   2              #if ECBM_UART2_EN
 239   2              case 2:{
 240   3                  UART2_SET_PIN(io);
 241   3                  gpio_mode(uart2_io_map[io][0],GPIO_IN);
 242   3                  gpio_mode(uart2_io_map[io][1],GPIO_OUT);
 243   3              }break;
 244   2              #endif
 245   2              #if ECBM_UART3_EN
                      case 3:{
                          UART3_SET_PIN(io);
                          gpio_mode(uart3_io_map[io>>1][0],GPIO_IN);
                          gpio_mode(uart3_io_map[io>>1][1],GPIO_OUT);
                      }break;
                      #endif
 252   2              #if ECBM_UART4_EN
                      case 4:{
                          UART4_SET_PIN(io);
                          gpio_mode(uart4_io_map[io>>2][0],GPIO_IN);
                          gpio_mode(uart4_io_map[io>>2][1],GPIO_OUT);
                      }break;
                      #endif
 259   2          }
 260   1      }
 261          /*-------------------------------------------------------
 262          ´®¿Ú²¨ÌØÂÊÉèÖÃº¯Êý¡£
 263          -------------------------------------------------------*/
 264          void uart_set_baud(u8 id,u32 baud){
 265   1          u16 res;
 266   1          res=(u16)(65536-(u16)(ecbm_sys_clk/4/baud));//Í¨¹ý²¨ÌØÂÊÉèÖÃ¶¨Ê±Æ÷³õÖµ¡£
 267   1          switch(id){
 268   2              #if ECBM_UART1_EN == 1       //µ±´®¿Ú1¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
 269   2              case 1:{
 270   3                  #if (ECBM_UART1_AUXR_CONFIG&0x01) == 0//Èç¹ûÑ¡ÔñÁË¶¨Ê±Æ÷1£¬
 271   3                  TIMER1_SET_REG_HL(res); //Éè¶¨¶¨Ê±³õÖµ¡£
 272   3                  #else               //Èç¹ûÑ¡ÔñÁË¶¨Ê±Æ÷2£¬
                          TIMER2_SET_REG_HL(res); //Éè¶¨¶¨Ê±³õÖµ¡£
                          #endif
 275   3              }break;
 276   2              #endif
 277   2              #if ECBM_UART2_EN == 1   //µ±´®¿Ú2¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
 278   2              case 2:{
 279   3                  TIMER2_SET_REG_HL(res);    //Éè¶¨¶¨Ê±³õÖµ¡£
 280   3              }break;
 281   2              #endif
 282   2              #if ECBM_UART3_EN == 1   //µ±´®¿Ú3¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
                      case 3:{
                          #if (ECBM_UART3_S3CON_CONFIG&0x40)==0
                          TIMER2_SET_REG_HL(res); //Éè¶¨¶¨Ê±³õÖµ¡£
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 6   

                          #else
                          TIMER3_SET_REG_HL(res);    //Éè¶¨¶¨Ê±³õÖµ¡£
                          #endif
                      }break;
                      #endif
 291   2              #if ECBM_UART4_EN == 1   //µ±´®¿Ú4¹¦ÄÜÊ¹ÄÜµÄÊ±ºò¡£
                      case 4:{
                          #if (ECBM_UART4_S4CON_CONFIG&0x40)==0
                          TIMER2_SET_REG_HL(res);    //Éè¶¨¶¨Ê±³õÖµ¡£
                          #else
                          TIMER4_SET_REG_HL(res);    //Éè¶¨¶¨Ê±³õÖµ¡£
                          #endif
                      }break;
                      #endif
 300   2          }
 301   1      }
 302          /*-------------------------------------------------------
 303          ´®¿Úµ¥¸ö×Ö½Ú·¢ËÍº¯Êý¡£
 304          -------------------------------------------------------*/
 305          void uart_char(u8 id,u8 ch){
 306   1          switch(id){
 307   2              #if ECBM_UART1_EN
 308   2              case 1:{
 309   3                  #if   ECBM_UART1_PARITY == 1
                          IF_ODD(ch){
                              UART1_SET_TXD_BYTE9_0;
                          }else{
                              UART1_SET_TXD_BYTE9_1;
                          }
                          #elif ECBM_UART1_PARITY == 2
                          IF_ODD(ch){
                              UART1_SET_TXD_BYTE9_1;
                          }else{
                              UART1_SET_TXD_BYTE9_0;
                          }
                          #elif ECBM_UART1_PARITY == 3
                          UART1_SET_TXD_BYTE9_1;
                          #elif ECBM_UART1_PARITY == 4
                          UART1_SET_TXD_BYTE9_0;
                          #endif
 326   3                  UART1_SET_REG_SBUF(ch);
 327   3                  uart1_busy=1;
 328   3                  while(uart1_busy);
 329   3              }break;
 330   2              #endif
 331   2              #if ECBM_UART2_EN
 332   2              case 2:{
 333   3                  #if   ECBM_UART2_PARITY == 1
                          IF_ODD(ch){
                              UART2_SET_TXD_BYTE9_0;
                          }else{
                              UART2_SET_TXD_BYTE9_1;
                          }
                          #elif ECBM_UART2_PARITY == 2
                          IF_ODD(ch){
                              UART2_SET_TXD_BYTE9_1;
                          }else{
                              UART2_SET_TXD_BYTE9_0;
                          }    
                          #elif ECBM_UART2_PARITY == 3
                          UART2_SET_TXD_BYTE9_1;
                          #elif ECBM_UART2_PARITY == 4
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 7   

                          UART2_SET_TXD_BYTE9_0;
                          #endif
 350   3                  UART2_SET_REG_S2BUF(ch);
 351   3                  uart2_busy=1;
 352   3                  while(uart2_busy);
 353   3              }break;
 354   2              #endif
 355   2              #if ECBM_UART3_EN
                      case 3:{
                          #if   ECBM_UART3_PARITY == 1
                          IF_ODD(ch){
                              UART3_SET_TXD_BYTE9_0;
                          }else{
                              UART3_SET_TXD_BYTE9_1;
                          }
                          #elif ECBM_UART3_PARITY == 2
                          IF_ODD(ch){
                              UART3_SET_TXD_BYTE9_1;
                          }else{
                              UART3_SET_TXD_BYTE9_0;
                          }    
                          #elif ECBM_UART3_PARITY == 3
                          UART3_SET_TXD_BYTE9_1;
                          #elif ECBM_UART3_PARITY == 4
                          UART3_SET_TXD_BYTE9_0;
                          #endif
                          UART3_SET_REG_S3BUF(ch);
                          uart3_busy=1;
                          while(uart3_busy);
                      }break;
                      #endif
 379   2              #if ECBM_UART4_EN
                      case 4:{
                          #if   ECBM_UART4_PARITY == 1
                          IF_ODD(ch){
                              UART4_SET_TXD_BYTE9_0;
                          }else{
                              UART4_SET_TXD_BYTE9_1;
                          }
                          #elif ECBM_UART4_PARITY == 2
                          IF_ODD(ch){
                              UART4_SET_TXD_BYTE9_1;
                          }else{
                              UART4_SET_TXD_BYTE9_0;
                          }    
                          #elif ECBM_UART4_PARITY == 3
                          UART4_SET_TXD_BYTE9_1;
                          #elif ECBM_UART4_PARITY == 4
                          UART4_SET_TXD_BYTE9_0;
                          #endif
                          UART4_SET_REG_S4BUF(ch);
                          uart4_busy=1;
                          while(uart4_busy);
                      }break;
                      #endif
 403   2          }    
 404   1      }
 405          /*-------------------------------------------------------
 406          9Î»Ä£Ê½ÏÂµÄ×Ö·û·¢ËÍº¯Êý¡£
 407          -------------------------------------------------------*/
 408          void uart_char_9(u8 id,u8 ch,u8 bit9){
 409   1          switch(id){
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 8   

 410   2              #if ECBM_UART1_EN
 411   2              case 1:{
 412   3                  if(bit9){
 413   4                      UART1_SET_TXD_BYTE9_1;
 414   4                  }else{
 415   4                      UART1_SET_TXD_BYTE9_0;
 416   4                  }
 417   3                  UART1_SET_REG_SBUF(ch);
 418   3                  uart1_busy=1;
 419   3                  while(uart1_busy);
 420   3              }break;
 421   2              #endif
 422   2              #if ECBM_UART2_EN
 423   2              case 2:{
 424   3                  if(bit9){
 425   4                      UART2_SET_TXD_BYTE9_1;
 426   4                  }else{
 427   4                      UART2_SET_TXD_BYTE9_0;
 428   4                  }
 429   3                  UART2_SET_REG_S2BUF(ch);
 430   3                  uart2_busy=1;
 431   3                  while(uart2_busy);
 432   3              }break;
 433   2              #endif
 434   2              #if ECBM_UART3_EN
                      case 3:{
                          if(bit9){
                              UART3_SET_TXD_BYTE9_1;
                          }else{
                              UART3_SET_TXD_BYTE9_0;
                          }
                          UART3_SET_REG_S3BUF(ch);
                          uart3_busy=1;
                          while(uart3_busy);
                      }break;
                      #endif
 446   2              #if ECBM_UART4_EN
                      case 4:{
                          if(bit9){
                              UART4_SET_TXD_BYTE9_1;
                          }else{
                              UART4_SET_TXD_BYTE9_0;
                          }
                          UART4_SET_REG_S4BUF(ch);
                          uart4_busy=1;
                          while(uart4_busy);
                      }break;
                      #endif
 458   2          }
 459   1      }
 460          /*-------------------------------------------------------
 461          ´®¿Ú×Ö·û´®·¢ËÍº¯Êý¡£
 462          -------------------------------------------------------*/
 463          void uart_string(u8 id,u8 * str){
 464   1          while(*str){
 465   2              uart_char(id,*str++);
 466   2          }    
 467   1      }
 468          /*-------------------------------------------------------
 469          ´®¿Ú´òÓ¡º¯Êý¡£
 470          -------------------------------------------------------*/
 471          #if    ECBM_UART_PRINTF_EN    ==    1
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 9   

 472          void uart_printf(u8 id,const char * str,...){
 473   1          char xdata buf[ECBM_UART_PRINTF_BUF_MAX];
 474   1          va_list vp;
 475   1          va_start(vp, str);
 476   1          
 477   1          vsprintf(buf,str,vp);
 478   1          va_end(vp);
 479   1          uart_string(id,buf);
 480   1      }
 481          #endif
 482          /*-------------------------------------------------------
 483          ´®¿Ú1ÖÐ¶Ï·þÎñ³ÌÐò
 484          -------------------------------------------------------*/
 485          #if ECBM_UART1_EN
 486          void uart1_it()UART1_IT_NUM{
 487   1          if(UART1_GET_RI_FLAG){//´®¿Ú1½ÓÊÕÖÐ¶Ï¡£
 488   2              UART1_RI_CLR;//Çåµô´®¿Ú1½ÓÊÕ±êÖ¾¡£
 489   2              #if ECBM_UART1_RECEIVE_CALLBACK_EN
 490   2              uart1_receive_callback();
 491   2              #endif
 492   2              #if ECBM_AUTO_DOWNLOAD_EN
 493   2              system_uart_reset();//ÊµÏÖ×Ô¶¯ÏÂÔØ¹¦ÄÜ¡£
 494   2              #endif
 495   2          }
 496   1          if(UART1_GET_TI_FLAG){//´®¿Ú1·¢ËÍÖÐ¶Ï¡£
 497   2              UART1_TI_CLR;//Çåµô´®¿Ú1·¢ËÍ±êÖ¾¡£
 498   2              uart1_busy=0;//Í¨Öª´®¿Ú3·¢ËÍº¯Êý¡£
 499   2              #if ECBM_UART1_SEND_CALLBACK_EN
                      uart1_send_callback();
                      #endif
 502   2          }
 503   1      }
 504          #endif
 505          /*-------------------------------------------------------
 506          ´®¿Ú2ÖÐ¶Ï·þÎñ³ÌÐò
 507          -------------------------------------------------------*/
 508          #if ECBM_UART2_EN
 509          void uart2_it()UART2_IT_NUM{
 510   1          if(UART2_GET_RI_FLAG){  //´®¿Ú2½ÓÊÕÖÐ¶Ï¡£
 511   2              UART2_RI_CLR; //Çåµô´®¿Ú2½ÓÊÕ±êÖ¾¡£
 512   2              #if ECBM_UART2_RECEIVE_CALLBACK_EN
 513   2              uart2_receive_callback();
 514   2              #endif
 515   2          }
 516   1          if(UART2_GET_TI_FLAG){  //´®¿Ú2·¢ËÍÖÐ¶Ï¡£
 517   2              UART2_TI_CLR; //Çåµô´®¿Ú2·¢ËÍ±êÖ¾¡£
 518   2              uart2_busy=0;//Í¨Öª´®¿Ú2·¢ËÍº¯Êý¡£
 519   2              #if ECBM_UART2_SEND_CALLBACK_EN
                      uart2_send_callback();
                      #endif
 522   2          }
 523   1      }
 524          #endif
 525          /*-------------------------------------------------------
 526          ´®¿Ú3ÖÐ¶Ï·þÎñ³ÌÐò
 527          -------------------------------------------------------*/
 528          #if ECBM_UART3_EN
              void uart3_it()UART3_IT_NUM{
                  if(UART3_GET_RI_FLAG){  //´®¿Ú3½ÓÊÕÖÐ¶Ï¡£
                      UART3_RI_CLR; //Çåµô´®¿Ú3½ÓÊÕ±êÖ¾¡£
                      #if ECBM_UART3_RECEIVE_CALLBACK_EN
                      uart3_receive_callback();
C51 COMPILER V9.60.0.0   UART                                                              11/12/2021 21:36:39 PAGE 10  

                      #endif
                  }
                  if(UART3_GET_TI_FLAG){  //´®¿Ú3·¢ËÍÖÐ¶Ï¡£
                      UART3_TI_CLR; //Çåµô´®¿Ú3·¢ËÍ±êÖ¾¡£
                      uart3_busy=0;//Í¨Öª´®¿Ú3·¢ËÍº¯Êý¡£
                      #if ECBM_UART3_SEND_CALLBACK_EN
                      uart3_send_callback();
                      #endif
                  }
              }
              #endif
 545          /*-------------------------------------------------------
 546          ´®¿Ú4ÖÐ¶Ï·þÎñ³ÌÐò
 547          -------------------------------------------------------*/
 548          #if ECBM_UART4_EN
              void uart4_it()UART4_IT_NUM{
                  if(UART4_GET_RI_FLAG){  //´®¿Ú4½ÓÊÕÖÐ¶Ï¡£
                      UART4_RI_CLR; //Çåµô´®¿Ú4½ÓÊÕ±êÖ¾¡£
                      #if ECBM_UART4_RECEIVE_CALLBACK_EN
                      uart4_receive_callback();
                      #endif
                  }
                  if(UART4_GET_TI_FLAG){  //´®¿Ú4·¢ËÍÖÐ¶Ï¡£
                      UART4_TI_CLR; //Çåµô´®¿Ú4·¢ËÍ±êÖ¾¡£
                      uart4_busy=0;//Í¨Öª´®¿Ú4·¢ËÍº¯Êý¡£
                      #if ECBM_UART4_SEND_CALLBACK_EN
                      uart4_send_callback();
                      #endif
                  }
              }
              #endif
 565          #endif  //ºÍ×îÉÏÃæµÄ#ifndefÅäºÏ³ÉÒ»¸ö³ÌÐò¶Î¡£
 566                  //ÒÔÒ»¸ö¿ÕÐÐÎª½áÎ²¡£


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    686    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----     184
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
