C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ECBM_CORE
OBJECT MODULE PLACED IN .\output\ecbm_core.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE ECBM_LIB\ecbm_core.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\ECBM_LI
                    -B;.\device;.\device\new_test;.\device\proj) DEBUG OBJECTEXTEND PRINT(.\output\ecbm_core.lst) OBJECT(.\output\ecbm_core.o
                    -bj)

line level    source

   1          #include "ecbm_core.h"
   2          /*------------------------------------◊ ‘¥≥ÂÕªæØ∏Ê---------------------------------*/
   3          #if (ECBM_UART_LIB_EN == 0)&&(ECBM_AUTO_DOWNLOAD_EN == 1)
              #error ◊‘∂Øœ¬‘ÿπ¶ƒ‹“Ú¥Æø⁄ø‚Œ¥º”‘ÿ∂¯ø™∆Ù ß∞‹£¨«Î«∞Õ˘ecbm_core.h πƒ‹¥Æø⁄ø‚£°
              #endif
   6          #if (ECBM_UART1_EN == 0)&&(ECBM_AUTO_DOWNLOAD_EN == 1)
              #error ◊‘∂Øœ¬‘ÿπ¶ƒ‹“Ú¥Æø⁄1Œ¥ πƒ‹∂¯ø™∆Ù ß∞‹£¨«Î«∞Õ˘uart.h πƒ‹¥Æø⁄1£°
              #endif
   9          #if (ECBM_UART1_IO != 0)&&(ECBM_AUTO_DOWNLOAD_EN == 1)
              #error ◊‘∂Øœ¬‘ÿπ¶ƒ‹–Ë“™¥Æø⁄1”≥…‰µΩP30∫ÕP31£¨«Î«∞Õ˘uart.h–ﬁ∏ƒ¥Æø⁄1µƒ ‰≥ˆIO£°
              #endif
  12          /*--------------------------------------±‰¡ø∂®“Â-----------------------------------*/
  13          u32 xdata ecbm_sys_clk=0;
  14          u16 xdata ecbm_delay_base;
  15          /*-----------------------------------ø…—°ƒ£øÈ…Ë∂®----------------------------------*/
  16          union{
  17              u32 num32;
  18              u16 num16[2];
  19              u8  num8[4];
  20          }fast_cout;
  21          /*-----------------------------------------`--------------
  22          ∫¡√Îº∂—” ±∫Ø ˝
  23          -------------------------------------------------------*/
  24          void delay_ms(u16 ms){
  25   1          u16 i;
  26   1           if(ms){
  27   2              do{
  28   3                  i=ecbm_delay_base;
  29   3                  while(--i);
  30   3              }while(--ms);    
  31   2          }
  32   1      }
  33          /*-------------------------------------------------------
  34          Œ¢√Îº∂—” ±∫Ø ˝£®Ω⁄≈ƒ£©
  35          -------------------------------------------------------*/
  36          void delay_us(u16 us){
  37   1          u16 i;
  38   1          i=us;
  39   1          while(i--);
  40   1      }
  41          /*-------------------------------------------------------
  42          Œ¢√Îº∂—” ±∫Ø ˝µƒΩ⁄≈ƒº∆À„∫Ø ˝
  43          -------------------------------------------------------*/
  44          u16 delay_set_us(u16 us){
  45   1      //π´ Ωº∆À„À˘ª®µƒ ±º‰Ã´≥§£¨≤∑÷≥…¡Ω∏ˆ∫Ø ˝°£œ»”√’‚∏ˆ∫Ø ˝Õ∆À„≥ˆ—” ±µƒ ˝÷µ£¨‘Ÿ”√œ¬√Êµƒ∫Ø ˝µ˜”√°£
  46   1          fast_cout.num32=((u32)ecbm_delay_base*(u32)(us))*131;
  47   1          return fast_cout.num16[0]>>1;
  48   1      }
  49          /************************************¥Æø⁄µ˜ ‘ƒ£øÈ***************/#if ECBM_AUTO_DOWNLOAD_EN
  50          /*-------------------------------------------------------
  51          ◊‘∂Øœ¬‘ÿÀ˘–Ëµƒ±‰¡ø 
  52          -------------------------------------------------------*/
  53          __IO u8 xdata old_char;  //±£¥Ê…œ“ª¥ŒΩ” ’µƒ ˝æ›
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 2   

  54          __IO u8 xdata char_count;//œ‡Õ¨ ˝æ›º∆ ˝
  55          /*-------------------------------------------------------
  56          œ¬‘ÿ¡˜≈–∂œ∫Ø ˝
  57          -------------------------------------------------------*/
  58          void system_uart_reset(){
  59   1          if(old_char!=UART1_GET_REG_SBUF){//≈–∂œ÷ÿ∏¥◊÷∑˚£¨»Áπ˚◊÷∑˚≤ª÷ÿ∏¥
  60   2              old_char=UART1_GET_REG_SBUF;    //æÕ∏¸–¬oldchar
  61   2              char_count=0;                //º∆ ˝∆˜«Â¡„
  62   2          }else{                            //»Áπ˚◊÷∑˚÷ÿ∏¥
  63   2              char_count++;                //‘Ú÷ÿ∏¥º∆ ˝∆˜+1
  64   2          }
  65   1          if(char_count>=233){            //Ω” ’µΩ233∏ˆ÷ÿ∏¥ ˝æ› ±
  66   2              _nop_();
  67   2              POWER_RESET;                //÷ÿ∆Ù
  68   2              _nop_();
  69   2              _nop_();
  70   2          }
  71   1      }
  72          #if ECBM_MCU_CHECK_EN
              /*-------------------------------------------------------
              œµÕ≥ºÏ≤È∫Ø ˝
              -------------------------------------------------------*/
              void system_check(){
                  u8 i,j;    
                  u16 aaa=0x1234;
                  debug("ECBM V%u.%u.%u on %s",(u16)ECBM_FVN,(u16)ECBM_RVN,(u16)ECBM_BVN,ECBM_MCU_NAME);// ‰≥ˆ∞Ê±æ∫≈∫Õµ•
             -∆¨ª˙–Õ∫≈
                  debug("%uK",(u16)((ECBM_MCU&0x0F0000)>>16));
                  debug("%02u",(u16)(ECBM_MCU_ROM_SIZE));
              #if        ECBM_MCU    ==    0x110301
                  debug("-8PIN");
              #elif    ECBM_MCU    ==    0x110302
                  debug("S2-16PIN/20PIN");
              #elif    ECBM_MCU    ==    0x120502
                  debug("S2");
              #elif    ECBM_MCU    ==    0x120504
                  debug("S4");
              #elif    ECBM_MCU    ==    0x2405C2
                  debug("S2A12");
              #elif    ECBM_MCU    ==    0x2815C4
                  debug("D4");
              #elif    ECBM_MCU    ==    0x2805C4
                  debug("S4A12");
              #elif    ECBM_MCU    ==    0x3103A2
                  debug("-16PIN/20PIN");
              #elif    ECBM_MCU    ==    0x310201
                  debug("-8PIN ");
              #elif    ECBM_MCU    ==    0x3102A1
                  debug("A-8PIN");
              #elif    ECBM_MCU    ==    0x3103A1
                  debug("T-20PIN");
              #elif    ECBM_MCU    ==    0x3205A2
                  debug("S2");
              #elif    ECBM_MCU    ==    0x3205A4
                  debug("S4");
              #elif    ECBM_MCU    ==    0x4103A2
                  debug("-20PIN");
              #elif    ECBM_MCU    ==    0x4105A2
                  debug("-32PIN");    
              #elif    ECBM_MCU    ==    0x4205C4
                  debug("T-48PIN");
              #elif    ECBM_MCU    ==    0x4305C2
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 3   

                  debug("S2-48PIN");    
              #elif    ECBM_MCU    ==    0x4305C4
                  debug("S4-48PIN");
              #elif    ECBM_MCU    ==    0x4805C4
                  debug("U-48PIN/64PIN");    
              #endif
                  j=0;
                  debug("\r\nChecking MCU ID");
                  for(i=0;i<7;i++){
                      debug(".");
                      if((REG_ID(i))==(MCUID[i])){
                          j++;
                      }
                  }
                  if(j!=7){
                      debug("Error\r\nPlease check the setting of the MCU model\r\n");
                  }else{
                      debug("OK\r\nID    :");for(i=0;i<7;i++){debug("%02X",(u16)(MCUID[i]));}debug("\r\n");        // ‰≥
             -ˆŒ®“ªID∫≈
                      debug("DATA  :128\tByte\r\n");//DATA«¯πÃ∂® «128Byte
                      debug("IDATA :128\tByte\r\n");//IDATA«¯πÃ∂® «128Byte
                      debug("XDATA :%u\tByte\r\n",(u16)((ECBM_MCU&0x0F0000)>>16)*1024);//¥”≈‰÷√Œƒº˛÷–ªÒ»°XDATA«¯¥Û–°
                      debug("FLASH :%lu\tByte\r\n",(u32)ECBM_MCU_ROM_SIZE*1024);//¥”≈‰÷√Œƒº˛÷–ªÒ»°FLASH«¯¥Û–°
                      debug("EEPROM:%u\tByte\r\n",(u16)512);//¥”≈‰÷√Œƒº˛÷–ªÒ»°EEPROM«¯¥Û–°
                      debug("SYSCLK:%lu\tHz\r\n",ecbm_sys_clk);// ‰≥ˆƒ⁄≤øæß’Ò÷µ£¨‘⁄Õº–ŒΩÁ√Ê…œ…Ë÷√
                      debug("LSI   :%u\tHz\r\n",REG_LSI);// ‰≥ˆƒ⁄≤øæß’Ò÷µ£¨‘⁄Õº–ŒΩÁ√Ê…œ…Ë÷√
                      debug("BGV   :%u\tmV\r\n",REG_BGV);// ‰≥ˆƒ⁄≤øµÁ—πª˘◊º÷µ£¨–Ë“™‘⁄STC-ISP…œ…Ë÷√
                      debug("ENDIAN:");
                      if(*((char*)(&aaa))==0x12)debug("big\tendian\r\n");
                      if(*((char*)(&aaa))==0x34)debug("little\tendian\r\n");
                  }    
              }
              #endif
 147          /****************************************************************************/#endif
 148          /*-------------------------------------------------------
 149          ∏Ò ΩªØ∑¢ÀÕ∫Ø ˝
 150          -------------------------------------------------------*/
 151          void debug(const char * str,...){
 152   1          char xdata buf[64];  //◊÷∑˚¥Æª∫¥Ê°£
 153   1          va_list vp;          //∂®“Â≤Œ ˝µÿ÷∑°£
 154   1          va_start(vp, str);   //∏≥÷µ≤Œ ˝µƒµÿ÷∑°£
 155   1          vsprintf(buf,str,vp);// π”√ƒ⁄÷√µƒprintf∫Ø ˝∏Ò ΩªØ°£
 156   1          va_end(vp);          // π”√ÕÍ“™πÿ±’°£
 157   1          uart_string(1,buf);  //Ω´∏Ò ΩªØ÷Æ∫Ûµƒ◊÷∑˚¥Æ∑¢ÀÕ≥ˆ»•°£
 158   1      }
 159          /*----------------------------------∆‰À˚œµÕ≥∫Ø ˝-----------------------------------*/
 160          #define SYS_HSI_S 0 //ƒ⁄≤ø∏ﬂÀŸ ±÷”HSI(±Í◊º)
 161          #define SYS_HSI_C 1 //ƒ⁄≤ø∏ﬂÀŸ ±÷”HSI(◊‘∂®“Â)
 162          #define SYS_LSI   2 //ƒ⁄≤øµÕÀŸ ±÷”LSI
 163          #define SYS_LSE   3 //Õ‚≤øµÕÀŸ ±÷”LSI
 164          #define SYS_HSE_A 4 //Õ‚≤ø”–‘¥æß’Ò
 165          #define SYS_HSE_P 5 //Õ‚≤øŒﬁ‘¥æß’Ò
 166          void system_set_clock(u8 source){
 167   1          switch(source){
 168   2              case SYS_HSI_S:
 169   2              case SYS_HSI_C:{
 170   3                  CLK_HSI_POWER_ON;    // πƒ‹HSI£¨º¥ƒ⁄≤ø24MµƒIRC°£
 171   3                  CLK_SET_SOURCE_HSI;    //«–ªªµΩHSI°£
 172   3                  CLK_HSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 173   3                  CLK_LSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 174   3                  CLK_LSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 175   3              }break;
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 4   

 176   2              case SYS_LSI:{
 177   3                  CLK_LSI_POWER_ON;    // πƒ‹LSI£¨º¥ƒ⁄≤ø32KµƒIRC°£
 178   3                  CLK_SET_SOURCE_LSI;    //«–ªªµΩLSI°£
 179   3                  CLK_HSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 180   3                  CLK_LSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 181   3                  CLK_HSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 182   3              }break;
 183   2              case SYS_LSE:{
 184   3                  CLK_LSE_POWER_ON;    // πƒ‹LSE£¨º¥Õ‚≤øµÕÀŸæß’Ò°£
 185   3                  CLK_SET_SOURCE_LSE;    //«–ªªµΩLSE°£
 186   3                  CLK_LSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 187   3                  CLK_HSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 188   3                  CLK_HSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 189   3              }break;
 190   2              case SYS_HSE_A:{
 191   3                  CLK_HSE_A_POWER_ON;    // πƒ‹HSE£®”–‘¥æß’Ò£©°£
 192   3                  CLK_SET_SOURCE_HSE;    //«–ªªµΩHSE°£
 193   3                  CLK_HSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 194   3                  CLK_LSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 195   3                  CLK_LSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 196   3              }break;
 197   2              case SYS_HSE_P:{
 198   3                  CLK_HSE_P_POWER_ON;    // πƒ‹HSE£®Œﬁ‘¥æß’Ò£©°£
 199   3                  CLK_SET_SOURCE_HSE;    //«–ªªµΩHSE°£
 200   3                  CLK_HSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 201   3                  CLK_LSE_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 202   3                  CLK_LSI_POWER_OFF;    //πÿ±’∆‰À˚ ±÷”‘¥£¨ °µÁ°£
 203   3              }break;
 204   2          }
 205   1      }
 206          void system_set_div(u8 div){
 207   1          if(div==0){                    //≈≈≥˝µÙ0’‚∏ˆ≤ªŒ»∂®—°œÓ°£
 208   2              CLK_SET_REG_CLKDIV(1);    //»Áπ˚ ‰»Î0µƒª∞æÕ∏ƒ≥…1°£
 209   2          }else{
 210   2              CLK_SET_REG_CLKDIV(div);//»Áπ˚≤ª «0£¨æÕ÷±Ω”–¥»Îºƒ¥Ê∆˜°£
 211   2          }
 212   1      }
 213          /*-------------------------------------------------------
 214          ø‚∫Ø ˝œµÕ≥≥ı ºªØ∫Ø ˝
 215          -------------------------------------------------------*/
 216          void system_init(void){
 217   1          #define ECBM_SYSCLK_STEP1 48000
 218   1          #define ECBM_SYSCLK_STEP2 76000
 219   1          #define ECBM_SYSCLK_STEP  54000    
 220   1          #if ECBM_SYSCLK_TYPE == 0    
 221   1          u32 sys_count;
 222   1          #endif
 223   1          EX_SFR_ENABLE;//¥Úø™∂ÓÕ‚µƒºƒ¥Ê∆˜°£
 224   1      //-------------ªÒ»°œµÕ≥ ±÷”------------//
 225   1      #if ECBM_SYSCLK_TYPE == 0//»Áπ˚ πƒ‹¡À±Í◊º∆µ¬ £®HSI£©£¨
 226   1          #if ((ECBM_MCU&0xF00000)>0x200000)//ºÏ≤È «≤ª «”–¡Ω∏ˆ∆µ∂Œµƒ–Õ∫≈°£
                      if(IRCBAND){//»Áπ˚”√µƒ «33M∆µ∂Œ£¨æÕ”√÷––ƒ∆µ¬ 36M¿¥º∆À„°£
                          sys_count=36000000L-(s32)((s32)REG_HSI1-(s32)IRTRIM)*ECBM_SYSCLK_STEP2;
                      }else{//»Áπ˚”√µƒ «24M∆µ∂Œ£¨æÕ”√÷––ƒ∆µ¬ 24M¿¥º∆À„°£
                          sys_count=24000000L-(s32)((s32)REG_HSI-(s32)IRTRIM)*ECBM_SYSCLK_STEP1;
                      }
                  #else //»Áπ˚ « π”√µ•∆µ∂Œµƒ–Õ∫≈°£
 233   1              sys_count=24000000L-(s32)((s32)REG_HSI-(s32)IRTRIM)*ECBM_SYSCLK_STEP;  //æÕ”√÷––ƒ∆µ¬ 24M¿¥º∆À„°£
 234   1          #endif
 235   1          sys_count/=CLKDIV;//À„…œ∑÷∆µœµ ˝°£
 236   1          if      (sys_count<5764800L ){//∏Ò ΩªØ¥¶¿Ì£¨º∆À„ª·”–ŒÛ≤Ó£¨µ√µΩ≤ª“ª∂® «±Í◊º∆µ¬ £¨‘⁄’‚¿Ô∏Ò ΩªØ≥…±Í◊º∆µ¬ 
             -°£
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 5   

 237   2              ecbm_sys_clk=5529600;
 238   2          }else if(sys_count<8529600L ){
 239   2              ecbm_sys_clk=6000000;
 240   2          }else if(sys_count<11529600L){
 241   2              ecbm_sys_clk=11059200;
 242   2          }else if(sys_count<15216000L){
 243   2              ecbm_sys_clk=12000000;
 244   2          }else if(sys_count<19216000L){
 245   2              ecbm_sys_clk=18432000;
 246   2          }else if(sys_count<21059200L){
 247   2              ecbm_sys_clk=20000000;
 248   2          }else if(sys_count<23059200L){
 249   2              ecbm_sys_clk=22118400;
 250   2          }else if(sys_count<25500000L){
 251   2              ecbm_sys_clk=24000000;
 252   2          }else if(sys_count<28500000L){
 253   2              ecbm_sys_clk=27000000;
 254   2          }else if(sys_count<31500000L){
 255   2              ecbm_sys_clk=30000000;
 256   2          }else if(sys_count<33500000L){
 257   2              ecbm_sys_clk=33177600;
 258   2          }else if(sys_count<33500000L){
 259   2              ecbm_sys_clk=35000000;    //◊Ó¥Û÷ß≥÷µΩ33M
 260   2          }
 261   1      #elif ECBM_SYSCLK_TYPE == 2//»Áπ˚ πƒ‹¡Àƒ⁄≤øµÕÀŸ ±÷”£¨
                  ecbm_sys_clk=REG_LSI;//¥”ram¿Ô∂¡≥ˆ ±÷”÷µ°£
              #else 
                  ecbm_sys_clk=ECBM_SYSCLK_SETTING;
              #endif
 266   1      #if ECBM_SYSCLK_TYPE >1//∏˘æ›ΩÁ√Êµƒ—°‘Ò£¨…Ë÷√ ±÷”‘¥°£
                  system_set_clock(ECBM_SYSCLK_TYPE);
              #endif    
 269   1      //-------------…Ë÷√—” ±ª˘◊º------------//        
 270   1          ecbm_delay_base=ecbm_sys_clk/10000;
 271   1      //---------------◊‘∂Øœ¬‘ÿ--------------//
 272   1      #if ECBM_AUTO_DOWNLOAD_EN//≈–∂œ∑Ò–Ë“™ø™∆Ù◊‘∂Øœ¬‘ÿ°£
 273   1          old_char=0;         //≥ı ºªØ¥Æø⁄œ‡πÿ±‰¡ø
 274   1          char_count=0;       //≥ı ºªØ¥Æø⁄œ‡πÿ±‰¡ø
 275   1          uart_init();
 276   1      #endif
 277   1      //-------------ª˘±æ”≤º˛…Ë÷√------------//
 278   1      #if ECBM_POWER_LIB_EN
 279   1          #if ECBM_POWER_RST_CFG_EN
                      power_rstcfg_init();
                  #endif
 282   1      #endif    
 283   1      //------------- ±÷” ‰≥ˆ…Ë÷√------------//    
 284   1      #if ECBM_SYSCLK_OUT_EN //≈–∂œ «∑Ò–Ë“™ø™∆Ù ±÷” ‰≥ˆ°£
                  #if ((ECBM_MCU&0xF00000)>0x200000)//ºÏ≤È «≤ª «GH°£
                      #if ECBM_SYSLCK_OUT_PIN
                          CLK_SET_OUT_TO_P16_GH;
                      #else
                          CLK_SET_OUT_TO_P54_GH;
                      #endif
                      CLK_OUT_SET_DIV_GH(ECBM_SYSCLK_OUT_SETTING_GH);
                  #else
                      #if ECBM_SYSLCK_OUT_PIN
                          CLK_SET_OUT_TO_P16_FA;
                      #else
                          CLK_SET_OUT_TO_P54_FA;
                      #endif
                      CLK_OUT_SET_DIV_FA(ECBM_SYSCLK_OUT_SETTING_FA);
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 6   

                  #endif
              #endif
 301   1      //--------------…Ë÷√»∑»œ---------------//
 302   1          EA_ENABLE;//¥Úø™◊‹÷–∂œ°£
 303   1      #if ECBM_MCU_CHECK_EN
                  delay_ms(500);
                  system_check();
              #endif
 307   1      }
 308          /*---------------------------------∆‰À˚∑«œµÕ≥∫Ø ˝---------------------------------*/
 309          /*-------------------------------------------------------
 310          »Ìº˛¥Æø⁄°£
 311          -------------------------------------------------------*/
 312          #if ECBM_SOFT_DEBUG_EN
              #if ECBM_GPIO_LIB_EN == 0  
              #error »Ìµ˜ ‘π¶ƒ‹–Ë“™GPIOø‚µƒ÷ß≥÷£¨«Î»∑»œGPIOø‚≥  πƒ‹◊¥Ã¨°£
              #endif 
              void debug_soft(u8 io,const char * str,...){
                  u8 i;                     //Œª∑¢ÀÕº∆ ˝°£
                  u16 j,len;                //◊÷∑˚∑¢ÀÕº∆ ˝°¢◊÷∑˚≥§∂»°£
                  u16 delay_debug;
                  char xdata buf[64];       //◊÷∑˚¥Æª∫¥Ê°£
                  va_list vp;               //∂®“Â≤Œ ˝µÿ÷∑°£
                  va_start(vp, str);        //∏≥÷µ≤Œ ˝µƒµÿ÷∑°£
                  len=vsprintf(buf,str,vp); // π”√ƒ⁄÷√µƒprintf∫Ø ˝∏Ò ΩªØ°£
                  va_end(vp);                  // π”√ÕÍ“™πÿ±’°£
                  delay_debug=delay_set_us(100);
                  for(j=0;j<len;j++){
                      gpio_out(io,1);       //ƒ¨»œ∏ﬂµÁ∆Ω°£
                      gpio_out(io,0);       //¿≠µÕ±Ì æø™ ºŒª°£
                      delay_us(delay_debug);//—” ±100us£¨∏˘æ›9600≤®Ãÿ¬ …Ë∂®µƒ°£œ¬Õ¨°£
                      for(i=0;i<8;i++){     //∞¥Œª∑¢ÀÕ°£
                          if(buf[j]&0x01){  //œ»∑¢µÕŒª°£
                              gpio_out(io,1);
                          }else{
                              gpio_out(io,0);
                          }    
                          buf[j]>>=1;       //∑¢ÕÍ”““∆£¨Œ™¡Àœ¬¥Œ∑¢ÀÕ°£
                          delay_us(delay_debug);
                      }
                      gpio_out(io,1);       //∑¢ÀÕÕÍ“ª∏ˆ◊÷Ω⁄£¨¿≠∏ﬂ±Ì æÕ£÷πŒª°£
                      delay_us(delay_debug);//—” ±200us£¨∫Õ…œ√ÊµƒΩ‚Àµ“ª—˘°£
                      delay_us(delay_debug);
                  }
              }
              #endif
 345          /**********************************strœµ¡–∫Ø ˝************************/#if ECBM_STRING_EN
              /*-------------------------------------------------------
              ◊÷∑˚¥Æ≤È’“∫Ø ˝°£
              -------------------------------------------------------*/
              u16 str_find(char * dest,char * key){
                  u16 key_count=0,key_first=0,count=0;
                  while(*dest){    //≈–∂œƒø±Í◊÷∑˚¥Æ°£
                      count++;    //º«¬º—≠ª∑µƒ¥Œ ˝°£
                      if(key[key_count]==(*dest)){//ºŸ»Áπÿº¸¥ ◊÷∑˚¥Æµ±«∞Œª±»∂‘≥…π¶£¨
                          key_count++;            //ƒ«√¥æÕ±»Ωœœ¬“ªŒª°£
                      }else{                        //ºŸ»Á√ª”–±»∂‘≥…π¶£¨
                          key_count=0;            //ƒ«√¥æÕ¥”Õ∑ø™ º±»∂‘°£
                          key_first=count;        //÷ÿ÷√µ⁄“ªŒª≥ˆœ÷Œª÷√°£
                      }
                      dest++;                        //∂¡»°ƒø±Í◊÷∑˚¥Æµƒœ¬“ªŒª°£
                      if(key[key_count]==0){        //»Áπ˚πÿº¸¥ ◊÷∑˚¥Æ±»∂‘ÕÍ£¨
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 7   

                          return key_first;        //∑µªÿπÿº¸¥ ◊÷∑˚¥Æµ⁄“ª¥Œ≥ˆœ÷µƒŒª÷√°£
                      } 
                  }
                  return 0xffff;//ƒ‹‘À––µΩ’‚“ª≤Ω£¨Àµ√˜÷±µΩƒø±Í◊÷∑˚¥ÆΩ· ¯∂º√ª”–±»∂‘≥…π¶£¨∑µªÿ-1°£
                  //”≈ªØ¡À194◊÷Ω⁄
                  
              //    u16 dest_c,   key_c;  //±‰¡øº∆ ˝∫Ø ˝°£
              //    u16 dest_len, key_len;//◊÷∑˚¥Æ≥§∂»°£
              //    char * dest_t,* key_t;//º∆À„≥§∂»À˘–Ëµƒ¡Ÿ ±±‰¡ø°£
              //    dest_t  =dest;        //Ω´ƒø±Í◊÷∑˚¥Æ∑≈»Î¡Ÿ ±±‰¡ø÷–°£
              //    key_t   =key;         //Ω´≤È’“πÿº¸◊÷◊÷∑˚¥Æ∑≈»Î¡Ÿ ±±‰¡ø÷–°£
              //    dest_len=0;           //«Â¡„º∆ ˝±‰¡ø°£
              //    key_len =0;           //«Â¡„º∆ ˝±‰¡ø°£
              //    while(*dest_t){       //º∆À„≥ˆƒø±Í◊÷∑˚¥Æµƒ≥§∂»°£
              //        dest_len++;       //º∆À„‘≠¿Ì «≈–∂œ◊÷∑˚¥Æ÷–∑«0◊÷∑˚µƒ∏ˆ ˝°£
              //        dest_t++;         //÷∏’Î+1°£œ¬“ª¥Œµƒ◊÷∑˚ «0µƒª∞£¨’‚∏ˆ—≠ª∑æÕΩ· ¯¡À°£
              //    }
              //    while(*key_t){        //º∆À„≥ˆπÿº¸◊÷◊÷∑˚¥Æµƒ≥§∂»°£
              //        key_len++;        //º∆À„‘≠¿Ì «≈–∂œ◊÷∑˚¥Æ÷–∑«0◊÷∑˚µƒ∏ˆ ˝°£
              //        key_t++;          //÷∏’Î+1°£œ¬“ª¥Œµƒ◊÷∑˚ «0µƒª∞£¨’‚∏ˆ—≠ª∑æÕΩ· ¯¡À°£
              //    }
              //    if(dest_len<key_len){ //»Áπ˚ƒø±Íµƒ≥§∂»±»πÿº¸◊÷µƒ≥§∂»∂Ã£¨Àµ√˜’‚ «”–Œ Ã‚µƒ°£
              //        return 0xffff;    //∑µªÿ0xFFFF°£
              //    }
              //    for(dest_c=0;dest_c<=(dest_len-key_len);dest_c++){ //ºŸ»Áƒø±Í◊÷∑˚¥Æ”–10∏ˆ£¨πÿº¸◊÷”–3∏ˆ°£ƒ«√¥◊Ó∂‡ºÏ≤‚
             -µΩµ⁄7∏ˆ◊÷∑˚µƒ ±∫ÚæÕ”–Ω·¬€¡À°£
              //        for(key_c=0;key_c<key_len;key_c++){            //πÿº¸◊÷”–º∏∏ˆ£¨æÕ≈–∂œº∏¥Œ°£
              //            if(dest[dest_c+key_c]!=key[key_c]){        //÷ª“™”ˆµΩ”–“ª∏ˆ±»∂‘≤ª…œµƒ£¨¡¢¬ÌÃ¯≥ˆ’‚¥Œ≈–∂œ°£
              //                break;
              //            }
              //        }
              //        if(key_c==key_len){                            //÷ª”–»´≤ø±»∂‘ÕÍ±œ£¨≤≈ª·œ‡µ»°£
              //            return dest_c;                             //ƒ«√¥¥À ±∑µªÿµƒæÕ «πÿº¸◊÷µ⁄“ª¥Œ≥ˆœ÷‘⁄◊÷∑˚¥Æ¿ÔµƒŒ
             -ª÷√°£
              //        }
              //    }
              //    return 0xffff;        //√ª’“µΩæÕ∑µªÿ0xFFFF°£
              }
              /*-------------------------------------------------------
              IO–≈œ¢∂¡»°∫Ø ˝°£
              -------------------------------------------------------*/
              u8 str_read_pin(char * str,u16 pos){
                  u8  dat=0,offset,count; //¥”◊ÛÕ˘”““¿¥Œ «∂¡»°µƒ–≈œ¢°¢◊÷∑˚¥Æ∆´“∆∫Õ◊÷ ˝Õ≥º∆°£
                  count=0;                //◊÷ ˝Õ≥º∆«Â¡„°£
                  for(offset=0;offset<10;offset++){//‘§¡Ù10∏ˆ∆´“∆¡ø°£
                      if((str[pos+offset]>='0')&&(str[pos+offset]<='7')){//IOø⁄µƒ±‡∫≈∂º «¥”0~7°£
                          count++;                            //‘⁄’‚∏ˆ∑∂Œßƒ⁄£¨◊÷ ˝+1°£
                          if(count==1){                       //»Áπ˚ «µ⁄“ª∏ˆ ˝£¨
                              dat=(str[pos+offset]-'0')<<4;   //Ω‚Œˆ≥ˆ¿¥∑≈µΩ∏ﬂ4Œª°£
                          }
                          if(count==2){                       //»Áπ˚ «µ⁄∂˛∏ˆ ˝£¨
                              dat=(str[pos+offset]-'0')|dat;  //Ω‚Œˆ≥ˆ¿¥∑≈µΩµÕ4Œª°£
                              return dat;                     //∑µªÿ∏√÷µ°£
                          }
                      }
                      if((str[pos+offset]>='8')&&(str[pos+offset]<='9')){//»Áπ˚ «8∫Õ9£¨ƒ«√¥÷ª‘ˆº”◊÷ ˝£¨≤ª–¥»Î÷µ°£
                          count++;
                      }
                      if(str[pos+offset]==',')break;//”ˆµΩ∂∫∫≈æÕÕÀ≥ˆ°£
                      if(str[pos+offset]==0)break;  //◊÷∑˚¥ÆΩ· ¯“≤ÕÀ≥ˆ°£
                  }
                  return     dat;
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 8   

              }
              /*-------------------------------------------------------
              u16±‰¡ø∂¡»°∫Ø ˝°£
              -------------------------------------------------------*/
              u16 str_read_u16(char * str,u16 pos){
                  u16 dat=0; //∂¡»°µƒ–≈œ¢°£
                  u8  offset;//◊÷∑˚¥Æ∆´“∆°£
                  for(offset=0;offset<20;offset++){//‘§¡Ù20∏ˆ◊÷∑˚µƒ∆´“∆°£
                      if((str[pos+offset]>='0')&&(str[pos+offset]<='9')){// ˝◊÷∂º «¥”0~9°£
                          dat*=10;                  //±‰¡ø‘ˆº”“ªŒª£¨º¥‘≠¿¥ «12£¨æÕ±‰≥…120£¨ø’≥ˆµƒ∏ˆ ˝æÕƒ√¿¥◊∞–¬µƒ ˝°£
                          dat+=str[pos+offset]-'0'; //Ω´–¬µƒ ˝º”µΩ∏ˆŒª…œ°£
                      }
                      if(str[pos+offset]==',')break;//”ˆµΩ∂∫∫≈æÕÕÀ≥ˆ°£
                      if(str[pos+offset]=='.')break;//”ˆµΩµ„∫≈æÕÕÀ≥ˆ°£
                      if(str[pos+offset]==0)break;  //◊÷∑˚¥ÆΩ· ¯“≤ÕÀ≥ˆ°£
                  }
                  return     dat;
              }
              /*-------------------------------------------------------
              ◊÷∑˚¥ÆÕ∆≥ˆ÷∏¡Ó∫Ø ˝£®¥¯◊÷∑˚¥Æ≥§∂»≤Œ ˝∞Ê£©°£
              -------------------------------------------------------*/
              u8 str_push_len(u8 * dest,u16 dlen,u8 * key,u16 klen){
                  u16 i,j=0,start=0,stop=0;
                  for(i=0;i<dlen;i++){        //¥”Õ∑ø™ º£¨÷±µΩ÷∏∂®µƒ≥§∂»°£
                      if(dest[i]==key[j]){    //∞—µ±«∞µƒ◊÷∑˚∫Õπÿº¸¥ ±»Ωœ≥…π¶£¨
                          j++;                //»°πÿº¸¥ µƒœ¬“ª∏ˆ◊÷°£
                          if(j==klen){        //µ±πÿº¸¥ »´≤ø±»∂‘ÕÍ≥…µƒ ±∫Ú°£
                              stop=i;            //±£¥Ê°æΩ· ¯Œª÷√°ø°£
                              break;            //ÕÀ≥ˆ—≠ª∑°£
                          }
                      }else{                    //»Áπ˚µ±«∞µƒ◊÷∑˚∫Õπÿº¸¥ ±»Ωœ ß∞‹£¨
                          j=0;                //œ¬“ª¥Œ¥”Õ∑ø™ º±»∂‘°£
                          start=i+1;            //∏¸–¬°æø™ ºŒª÷√°øŒ™œ¬“ªŒª£®“ÚŒ™µ±«∞Œª ß∞‹¡À£©°£
                      }
                  }
                  if(start<=stop){            //µ±±»∂‘≥…π¶µƒ ±∫Ú£¨°æø™ ºŒª÷√°øøœ∂®–°”⁄µ»”⁄°æΩ· ¯Œª÷√°ø°£
                      for(i=start;i<stop;i++){//Ω´¥”°æø™ ºŒª÷√°øµΩ°æΩ· ¯Œª÷√°ø÷Æº‰µƒª∫¥Ê»´«Â¡„°£
                          dest[i]=0;
                      }
                      return 1;                //∑µªÿÕ∆≥ˆ≥…π¶°£
                  }else{
                      return 0;                //∑µªÿÕ∆≥ˆ ß∞‹°£
                  }
              }
              /*****************************************************************************/#endif
 466          /*≥Ã–Ú«¯’€µ˛◊®”√******************CRC16ƒ£øÈ***********************/#if ECBM_CRC16_EN
              /*-------------------------------------------------------
              º∆À„CRC16∫Ø ˝°£
              -------------------------------------------------------*/
              u16 crc16(u8 buf[],u16 len){
                  u16 crc_value= 0xFFFF;                             //≥ı ºªØCRC±‰¡ø∏˜ŒªŒ™1°£
                  u8 i,j;                                            //—≠ª∑”√µƒ¡Ÿ ±±‰¡ø°£
                  for(i=0;i<len;i++){                                //º∆À„ª∫¥Êµƒ√ø“ª∏ˆ◊÷Ω⁄°£
                      crc_value^=buf[i];                            //µ±«∞ ˝æ›“ÏªÚCRCµÕ◊÷Ω⁄£¨‘⁄C51¿Ôø…“‘÷±Ω”¥¶¿Ì°£
                      for(j=0;j<8;j++){                            //º∆À„√ø∏ˆ◊÷Ω⁄µƒ√ø“ªŒª°£
                          if(crc_value&0x01){                        //≈–∂œ”““∆«∞◊ÓµÕŒª «∑ÒŒ™1°£
                               crc_value=(crc_value>>1)^0xA001;    //»Áπ˚Œ™1‘Ú”““∆≤¢“ÏªÚ±Ì¥Ô Ω°£
                          }else{
                              crc_value>>=1;                        //∑Ò‘Ú÷±Ω””““∆“ªŒª°£
                          }           
                      }
                  } 
C51 COMPILER V9.60.0.0   ECBM_CORE                                                         11/08/2021 17:51:22 PAGE 9   

                  return crc_value;                                //∑µªÿº∆À„CRC16µƒΩ·π˚°£
              }
              /*-------------------------------------------------------
              ≤Â»ÎCRC16∫Ø ˝°£
              -------------------------------------------------------*/
              void crc16_insert_buf(u8 buf[],u16 len){
                  u16 value;                    //¡Ÿ ±±‰¡ø°£
                  value=crc16(buf,len-2);        //º∆À„≥ˆCRC16÷µ°£
                  buf[len-2]=(u8)(value>>8);    //∞¥∏ﬂŒª‘⁄«∞£¨
                  buf[len-1]=(u8)(value);        //µÕŒª‘⁄∫ÛµƒÀ≥–Ú¥Ê∑≈°£
              }
              /*-------------------------------------------------------
              ºÏ≤ÈCRC16∫Ø ˝°£
              -------------------------------------------------------*/
              u8 crc16_check_buf(u8 buf[],u16 len){
                  if(crc16(buf,len-2)==((buf[len-2]<<8)+(buf[len-1]))){//º∆À„«∞√ÊµƒCRC16÷µ∫Õ∫Û√Ê±£¥ÊµƒCRC16÷µ±»Ωœ°£
                      return 1;//±»Ωœ≥…π¶∑µªÿ1£ª
                  }else{
                      return 0;//±»Ωœ ß∞‹∑µªÿ0£ª
                  }
              }
              /*≥Ã–Ú«¯’€µ˛◊®”√************************************************************/#endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1053    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12     114
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
